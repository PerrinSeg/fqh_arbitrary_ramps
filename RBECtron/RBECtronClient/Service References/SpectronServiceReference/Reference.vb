'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace SpectronServiceReference
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="SpectronServiceReference.ISpectron")>  _
    Public Interface ISpectron
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/allocate_NI_waveform", ReplyAction:="http://tempuri.org/ISpectron/allocate_NI_waveformResponse")>  _
        Sub allocate_NI_waveform(ByVal words As Long)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/configure_653x", ReplyAction:="http://tempuri.org/ISpectron/configure_653xResponse")>  _
        Sub configure_653x(ByVal deviceName As String, ByVal trigger As String, ByVal clock As String, ByVal words As Long)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/initialize_data", ReplyAction:="http://tempuri.org/ISpectron/initialize_dataResponse")>  _
        Sub initialize_data(ByVal deviceName As String, ByVal max_words As Long)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/transpose_data", ReplyAction:="http://tempuri.org/ISpectron/transpose_dataResponse")>  _
        Sub transpose_data()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/write_to_653x", ReplyAction:="http://tempuri.org/ISpectron/write_to_653xResponse")>  _
        Function write_to_653x() As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/release_data", ReplyAction:="http://tempuri.org/ISpectron/release_dataResponse")>  _
        Sub release_data()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/release_task", ReplyAction:="http://tempuri.org/ISpectron/release_taskResponse")>  _
        Sub release_task()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/DisableClkDist", ReplyAction:="http://tempuri.org/ISpectron/DisableClkDistResponse")>  _
        Sub DisableClkDist(ByVal t_start As Double, ByVal t_stop As Double)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetDDSFreqSweep", ReplyAction:="http://tempuri.org/ISpectron/SetDDSFreqSweepResponse")>  _
        Sub SetDDSFreqSweep(ByVal dds_chan As Integer, ByVal start_freq As Double, ByVal stop_freq As Double, ByVal sweep_duration As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetDDSFreqSweepFast", ReplyAction:="http://tempuri.org/ISpectron/SetDDSFreqSweepFastResponse")>  _
        Sub SetDDSFreqSweepFast(ByVal dds_chan As Integer, ByVal start_freq As Double, ByVal stop_freq As Double, ByVal sweep_duration As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetDDSFreq", ReplyAction:="http://tempuri.org/ISpectron/SetDDSFreqResponse")>  _
        Sub SetDDSFreq(ByVal dds_chan As Integer, ByVal voltage As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetFreq", ReplyAction:="http://tempuri.org/ISpectron/SetFreqResponse")>  _
        Sub SetFreq(ByVal freq As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetFreqTime", ReplyAction:="http://tempuri.org/ISpectron/SetFreqTimeResponse")>  _
        Sub SetFreqTime(ByVal freq As Double, ByVal set_time As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetPLLRN", ReplyAction:="http://tempuri.org/ISpectron/SetPLLRNResponse")>  _
        Sub SetPLLRN(ByVal RCounter As Integer, ByVal NCounter As Integer, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetPLLRNTime", ReplyAction:="http://tempuri.org/ISpectron/SetPLLRNTimeResponse")>  _
        Sub SetPLLRNTime(ByVal RCounter As Integer, ByVal NCounter As Integer, ByVal set_time As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/SetVoltage", ReplyAction:="http://tempuri.org/ISpectron/SetVoltageResponse")>  _
        Sub SetVoltage(ByVal voltage As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddStep", ReplyAction:="http://tempuri.org/ISpectron/AddStepResponse")>  _
        Sub AddStep(ByVal step_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddDebugStep", ReplyAction:="http://tempuri.org/ISpectron/AddDebugStepResponse")>  _
        Sub AddDebugStep(ByVal step_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddExp", ReplyAction:="http://tempuri.org/ISpectron/AddExpResponse")>  _
        Sub AddExp(ByVal base_volts As Double, ByVal offset_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal time_constant As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddExpSane", ReplyAction:="http://tempuri.org/ISpectron/AddExpSaneResponse")>  _
        Sub AddExpSane(ByVal v0 As Double, ByVal vf As Double, ByVal tau_ms As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddExpAndRamp", ReplyAction:="http://tempuri.org/ISpectron/AddExpAndRampResponse")>  _
        Sub AddExpAndRamp(ByVal base_volts As Double, ByVal offset_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal tramp As Double, ByVal time_const As Double, ByVal start_volts As Double, ByVal stop_volts As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRamp", ReplyAction:="http://tempuri.org/ISpectron/AddRampResponse")>  _
        Sub AddRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddTunnelSine", ReplyAction:="http://tempuri.org/ISpectron/AddTunnelSineResponse")>  _
        Sub AddTunnelSine(ByVal offset_depth As Double, ByVal rel_amp As Double, ByVal freq_Hz As Double, ByVal phase As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddTunnelSineRamp", ReplyAction:="http://tempuri.org/ISpectron/AddTunnelSineRampResponse")>  _
        Sub AddTunnelSineRamp(ByVal offset_depth As Double, ByVal rel_amp As Double, ByVal freq_start As Double, ByVal freq_stop As Double, ByVal phase_start As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal slope As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddAxialExpRamp", ReplyAction:="http://tempuri.org/ISpectron/AddAxialExpRampResponse")>  _
        Sub AddAxialExpRamp(ByVal start_2Ddepth As Double, ByVal stop_2Ddepth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal axial_calib_depth As Double, ByVal axial_calib_volt As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSine", ReplyAction:="http://tempuri.org/ISpectron/AddSineResponse")>  _
        Sub AddSine(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampLogSine3Return", ReplyAction:="http://tempuri.org/ISpectron/AddRampLogSine3ReturnResponse")>  _
        Sub AddRampLogSine3Return(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal ramp_dur As Double, ByVal hold_dur As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampLogSine3NoReturn", ReplyAction:="http://tempuri.org/ISpectron/AddRampLogSine3NoReturnResponse")>  _
        Sub AddRampLogSine3NoReturn(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal ramp_dur As Double, ByVal hold_dur As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampLogSine3PhaseReturn", ReplyAction:="http://tempuri.org/ISpectron/AddRampLogSine3PhaseReturnResponse")>  _
        Sub AddRampLogSine3PhaseReturn( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi_start As Double,  _
                    ByVal phase_pi_stop As Double,  _
                    ByVal phase_ramp_dur As Double,  _
                    ByVal t_start As Double,  _
                    ByVal ramp_dur As Double,  _
                    ByVal hold_dur As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampLogSine3PhaseNoReturn", ReplyAction:="http://tempuri.org/ISpectron/AddRampLogSine3PhaseNoReturnResponse")>  _
        Sub AddRampLogSine3PhaseNoReturn( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi_start As Double,  _
                    ByVal phase_pi_stop As Double,  _
                    ByVal phase_ramp_dur As Double,  _
                    ByVal t_start As Double,  _
                    ByVal ramp_dur As Double,  _
                    ByVal hold_dur As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddLogSine3", ReplyAction:="http://tempuri.org/ISpectron/AddLogSine3Response")>  _
        Sub AddLogSine3(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddLogSine3Phase", ReplyAction:="http://tempuri.org/ISpectron/AddLogSine3PhaseResponse")>  _
        Sub AddLogSine3Phase(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal t_ref As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampLogSine3", ReplyAction:="http://tempuri.org/ISpectron/AddRampLogSine3Response")>  _
        Sub AddRampLogSine3( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi As Double,  _
                    ByVal tunneling_init As Double,  _
                    ByVal tunneling_final As Double,  _
                    ByVal detuning_Hz_init As Double,  _
                    ByVal detuning_Hz_final As Double,  _
                    ByVal t_start As Double,  _
                    ByVal t_stop As Double,  _
                    ByVal t_ref As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSine3", ReplyAction:="http://tempuri.org/ISpectron/AddSine3Response")>  _
        Sub AddSine3(ByVal offset As Double, ByVal amp1 As Double, ByVal amp2 As Double, ByVal amp3 As Double, ByVal freq1 As Double, ByVal freq2 As Double, ByVal freq3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSinePhase", ReplyAction:="http://tempuri.org/ISpectron/AddSinePhaseResponse")>  _
        Sub AddSinePhase(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSineFlip", ReplyAction:="http://tempuri.org/ISpectron/AddSineFlipResponse")>  _
        Sub AddSineFlip(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal fract As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSineRamp", ReplyAction:="http://tempuri.org/ISpectron/AddSineRampResponse")>  _
        Sub AddSineRamp(ByVal offset As Double, ByVal amp As Double, ByVal freq_start As Double, ByVal freq_stop As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddLogRamp", ReplyAction:="http://tempuri.org/ISpectron/AddLogRampResponse")>  _
        Sub AddLogRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddLogRampRedDipole", ReplyAction:="http://tempuri.org/ISpectron/AddLogRampRedDipoleResponse")>  _
        Sub AddLogRampRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddTunnelRamp", ReplyAction:="http://tempuri.org/ISpectron/AddTunnelRampResponse")>  _
        Sub AddTunnelRamp(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddTunnelGaugeRamp2", ReplyAction:="http://tempuri.org/ISpectron/AddTunnelGaugeRamp2Response")>  _
        Sub AddTunnelGaugeRamp2(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddTunnelGaugeRamp", ReplyAction:="http://tempuri.org/ISpectron/AddTunnelGaugeRampResponse")>  _
        Sub AddTunnelGaugeRamp(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddInterpolatedRampUsingFile", ReplyAction:="http://tempuri.org/ISpectron/AddInterpolatedRampUsingFileResponse")>  _
        Sub AddInterpolatedRampUsingFile(ByVal filename As String, ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSmoothRamp", ReplyAction:="http://tempuri.org/ISpectron/AddSmoothRampResponse")>  _
        Sub AddSmoothRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddAFMRamp", ReplyAction:="http://tempuri.org/ISpectron/AddAFMRampResponse")>  _
        Sub AddAFMRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal t_ramp As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSmoothBox", ReplyAction:="http://tempuri.org/ISpectron/AddSmoothBoxResponse")>  _
        Sub AddSmoothBox(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_dur As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddS", ReplyAction:="http://tempuri.org/ISpectron/AddSResponse")>  _
        Sub AddS(ByVal background_volts As Double, ByVal final_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampRedDipole", ReplyAction:="http://tempuri.org/ISpectron/AddRampRedDipoleResponse")>  _
        Function AddRampRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddRampRedDipoleBkwd", ReplyAction:="http://tempuri.org/ISpectron/AddRampRedDipoleBkwdResponse")>  _
        Function AddRampRedDipoleBkwd(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddSRedDipole", ReplyAction:="http://tempuri.org/ISpectron/AddSRedDipoleResponse")>  _
        Function AddSRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddFancySmoothRamp", ReplyAction:="http://tempuri.org/ISpectron/AddFancySmoothRampResponse")>  _
        Sub AddFancySmoothRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal alpha As Double, ByVal beta As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddFromFile", ReplyAction:="http://tempuri.org/ISpectron/AddFromFileResponse")>  _
        Sub AddFromFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal max_current As Double, ByVal num_psu As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddFromTransportFile", ReplyAction:="http://tempuri.org/ISpectron/AddFromTransportFileResponse")>  _
        Sub AddFromTransportFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal max_current As Double, ByVal num_psu As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/AddFromBinaryTransportFile", ReplyAction:="http://tempuri.org/ISpectron/AddFromBinaryTransportFileResponse")>  _
        Sub AddFromBinaryTransportFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/Add", ReplyAction:="http://tempuri.org/ISpectron/AddResponse")>  _
        Function Add(ByVal n1 As Double, ByVal n2 As Double) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ISpectron/GetTotalTime", ReplyAction:="http://tempuri.org/ISpectron/GetTotalTimeResponse")>  _
        Function GetTotalTime() As Double
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ISpectronChannel
        Inherits SpectronServiceReference.ISpectron, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class SpectronClient
        Inherits System.ServiceModel.ClientBase(Of SpectronServiceReference.ISpectron)
        Implements SpectronServiceReference.ISpectron
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Sub allocate_NI_waveform(ByVal words As Long) Implements SpectronServiceReference.ISpectron.allocate_NI_waveform
            MyBase.Channel.allocate_NI_waveform(words)
        End Sub
        
        Public Sub configure_653x(ByVal deviceName As String, ByVal trigger As String, ByVal clock As String, ByVal words As Long) Implements SpectronServiceReference.ISpectron.configure_653x
            MyBase.Channel.configure_653x(deviceName, trigger, clock, words)
        End Sub
        
        Public Sub initialize_data(ByVal deviceName As String, ByVal max_words As Long) Implements SpectronServiceReference.ISpectron.initialize_data
            MyBase.Channel.initialize_data(deviceName, max_words)
        End Sub
        
        Public Sub transpose_data() Implements SpectronServiceReference.ISpectron.transpose_data
            MyBase.Channel.transpose_data
        End Sub
        
        Public Function write_to_653x() As Integer Implements SpectronServiceReference.ISpectron.write_to_653x
            Return MyBase.Channel.write_to_653x
        End Function
        
        Public Sub release_data() Implements SpectronServiceReference.ISpectron.release_data
            MyBase.Channel.release_data
        End Sub
        
        Public Sub release_task() Implements SpectronServiceReference.ISpectron.release_task
            MyBase.Channel.release_task
        End Sub
        
        Public Sub DisableClkDist(ByVal t_start As Double, ByVal t_stop As Double) Implements SpectronServiceReference.ISpectron.DisableClkDist
            MyBase.Channel.DisableClkDist(t_start, t_stop)
        End Sub
        
        Public Sub SetDDSFreqSweep(ByVal dds_chan As Integer, ByVal start_freq As Double, ByVal stop_freq As Double, ByVal sweep_duration As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetDDSFreqSweep
            MyBase.Channel.SetDDSFreqSweep(dds_chan, start_freq, stop_freq, sweep_duration, dat_chan)
        End Sub
        
        Public Sub SetDDSFreqSweepFast(ByVal dds_chan As Integer, ByVal start_freq As Double, ByVal stop_freq As Double, ByVal sweep_duration As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetDDSFreqSweepFast
            MyBase.Channel.SetDDSFreqSweepFast(dds_chan, start_freq, stop_freq, sweep_duration, dat_chan)
        End Sub
        
        Public Sub SetDDSFreq(ByVal dds_chan As Integer, ByVal voltage As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetDDSFreq
            MyBase.Channel.SetDDSFreq(dds_chan, voltage, dat_chan)
        End Sub
        
        Public Sub SetFreq(ByVal freq As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetFreq
            MyBase.Channel.SetFreq(freq, dat_chan)
        End Sub
        
        Public Sub SetFreqTime(ByVal freq As Double, ByVal set_time As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetFreqTime
            MyBase.Channel.SetFreqTime(freq, set_time, dat_chan)
        End Sub
        
        Public Sub SetPLLRN(ByVal RCounter As Integer, ByVal NCounter As Integer, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetPLLRN
            MyBase.Channel.SetPLLRN(RCounter, NCounter, dat_chan)
        End Sub
        
        Public Sub SetPLLRNTime(ByVal RCounter As Integer, ByVal NCounter As Integer, ByVal set_time As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetPLLRNTime
            MyBase.Channel.SetPLLRNTime(RCounter, NCounter, set_time, dat_chan)
        End Sub
        
        Public Sub SetVoltage(ByVal voltage As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.SetVoltage
            MyBase.Channel.SetVoltage(voltage, dat_chan)
        End Sub
        
        Public Sub AddStep(ByVal step_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddStep
            MyBase.Channel.AddStep(step_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddDebugStep(ByVal step_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddDebugStep
            MyBase.Channel.AddDebugStep(step_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddExp(ByVal base_volts As Double, ByVal offset_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal time_constant As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddExp
            MyBase.Channel.AddExp(base_volts, offset_volts, t_start, t_stop, time_constant, dat_chan)
        End Sub
        
        Public Sub AddExpSane(ByVal v0 As Double, ByVal vf As Double, ByVal tau_ms As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddExpSane
            MyBase.Channel.AddExpSane(v0, vf, tau_ms, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddExpAndRamp(ByVal base_volts As Double, ByVal offset_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal tramp As Double, ByVal time_const As Double, ByVal start_volts As Double, ByVal stop_volts As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddExpAndRamp
            MyBase.Channel.AddExpAndRamp(base_volts, offset_volts, t_start, t_stop, tramp, time_const, start_volts, stop_volts, dat_chan)
        End Sub
        
        Public Sub AddRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRamp
            MyBase.Channel.AddRamp(start_volts, stop_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddTunnelSine(ByVal offset_depth As Double, ByVal rel_amp As Double, ByVal freq_Hz As Double, ByVal phase As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddTunnelSine
            MyBase.Channel.AddTunnelSine(offset_depth, rel_amp, freq_Hz, phase, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddTunnelSineRamp(ByVal offset_depth As Double, ByVal rel_amp As Double, ByVal freq_start As Double, ByVal freq_stop As Double, ByVal phase_start As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal slope As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddTunnelSineRamp
            MyBase.Channel.AddTunnelSineRamp(offset_depth, rel_amp, freq_start, freq_stop, phase_start, t_start, t_stop, calib_volt, slope, dat_chan)
        End Sub
        
        Public Sub AddAxialExpRamp(ByVal start_2Ddepth As Double, ByVal stop_2Ddepth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal axial_calib_depth As Double, ByVal axial_calib_volt As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddAxialExpRamp
            MyBase.Channel.AddAxialExpRamp(start_2Ddepth, stop_2Ddepth, t_start, t_stop, axial_calib_depth, axial_calib_volt, dat_chan)
        End Sub
        
        Public Sub AddSine(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSine
            MyBase.Channel.AddSine(offset, amp, freq, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddRampLogSine3Return(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal ramp_dur As Double, ByVal hold_dur As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRampLogSine3Return
            MyBase.Channel.AddRampLogSine3Return(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi, t_start, ramp_dur, hold_dur, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddRampLogSine3NoReturn(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal ramp_dur As Double, ByVal hold_dur As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRampLogSine3NoReturn
            MyBase.Channel.AddRampLogSine3NoReturn(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi, t_start, ramp_dur, hold_dur, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddRampLogSine3PhaseReturn( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi_start As Double,  _
                    ByVal phase_pi_stop As Double,  _
                    ByVal phase_ramp_dur As Double,  _
                    ByVal t_start As Double,  _
                    ByVal ramp_dur As Double,  _
                    ByVal hold_dur As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRampLogSine3PhaseReturn
            MyBase.Channel.AddRampLogSine3PhaseReturn(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi_start, phase_pi_stop, phase_ramp_dur, t_start, ramp_dur, hold_dur, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddRampLogSine3PhaseNoReturn( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi_start As Double,  _
                    ByVal phase_pi_stop As Double,  _
                    ByVal phase_ramp_dur As Double,  _
                    ByVal t_start As Double,  _
                    ByVal ramp_dur As Double,  _
                    ByVal hold_dur As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRampLogSine3PhaseNoReturn
            MyBase.Channel.AddRampLogSine3PhaseNoReturn(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi_start, phase_pi_stop, phase_ramp_dur, t_start, ramp_dur, hold_dur, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddLogSine3(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddLogSine3
            MyBase.Channel.AddLogSine3(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi, t_start, t_stop, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddLogSine3Phase(ByVal lattice_depth As Double, ByVal rel_amp_1 As Double, ByVal rel_amp_2 As Double, ByVal rel_amp_3 As Double, ByVal freq_Hz_1 As Double, ByVal freq_Hz_2 As Double, ByVal freq_Hz_3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal t_ref As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddLogSine3Phase
            MyBase.Channel.AddLogSine3Phase(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi, t_start, t_stop, t_ref, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddRampLogSine3( _
                    ByVal lattice_depth As Double,  _
                    ByVal rel_amp_1 As Double,  _
                    ByVal rel_amp_2 As Double,  _
                    ByVal rel_amp_3 As Double,  _
                    ByVal freq_Hz_1 As Double,  _
                    ByVal freq_Hz_2 As Double,  _
                    ByVal freq_Hz_3 As Double,  _
                    ByVal phase_pi As Double,  _
                    ByVal tunneling_init As Double,  _
                    ByVal tunneling_final As Double,  _
                    ByVal detuning_Hz_init As Double,  _
                    ByVal detuning_Hz_final As Double,  _
                    ByVal t_start As Double,  _
                    ByVal t_stop As Double,  _
                    ByVal t_ref As Double,  _
                    ByVal voltage_offset As Double,  _
                    ByVal calib_volt As Double,  _
                    ByVal calib_depth As Double,  _
                    ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddRampLogSine3
            MyBase.Channel.AddRampLogSine3(lattice_depth, rel_amp_1, rel_amp_2, rel_amp_3, freq_Hz_1, freq_Hz_2, freq_Hz_3, phase_pi, tunneling_init, tunneling_final, detuning_Hz_init, detuning_Hz_final, t_start, t_stop, t_ref, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddSine3(ByVal offset As Double, ByVal amp1 As Double, ByVal amp2 As Double, ByVal amp3 As Double, ByVal freq1 As Double, ByVal freq2 As Double, ByVal freq3 As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSine3
            MyBase.Channel.AddSine3(offset, amp1, amp2, amp3, freq1, freq2, freq3, phase_pi, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddSinePhase(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal phase_pi As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSinePhase
            MyBase.Channel.AddSinePhase(offset, amp, freq, phase_pi, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddSineFlip(ByVal offset As Double, ByVal amp As Double, ByVal freq As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal fract As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSineFlip
            MyBase.Channel.AddSineFlip(offset, amp, freq, t_start, t_stop, fract, dat_chan)
        End Sub
        
        Public Sub AddSineRamp(ByVal offset As Double, ByVal amp As Double, ByVal freq_start As Double, ByVal freq_stop As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSineRamp
            MyBase.Channel.AddSineRamp(offset, amp, freq_start, freq_stop, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddLogRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddLogRamp
            MyBase.Channel.AddLogRamp(start_volts, stop_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddLogRampRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddLogRampRedDipole
            MyBase.Channel.AddLogRampRedDipole(red_start_volts, red_start_freq, lattice_start_depth, lattice_stop_depth, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddTunnelRamp(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal voltage_offset As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddTunnelRamp
            MyBase.Channel.AddTunnelRamp(conversion_coeffs, start_tunneling, stop_tunneling, t_start, t_stop, voltage_offset, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddTunnelGaugeRamp2(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddTunnelGaugeRamp2
            MyBase.Channel.AddTunnelGaugeRamp2(conversion_coeffs, start_tunneling, stop_tunneling, t_start, t_stop, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddTunnelGaugeRamp(ByVal conversion_coeffs() As Double, ByVal start_tunneling As Double, ByVal stop_tunneling As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal calib_volt As Double, ByVal calib_depth As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddTunnelGaugeRamp
            MyBase.Channel.AddTunnelGaugeRamp(conversion_coeffs, start_tunneling, stop_tunneling, t_start, t_stop, calib_volt, calib_depth, dat_chan)
        End Sub
        
        Public Sub AddInterpolatedRampUsingFile(ByVal filename As String, ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddInterpolatedRampUsingFile
            MyBase.Channel.AddInterpolatedRampUsingFile(filename, start_volts, stop_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddSmoothRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSmoothRamp
            MyBase.Channel.AddSmoothRamp(start_volts, stop_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddAFMRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal t_ramp As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddAFMRamp
            MyBase.Channel.AddAFMRamp(start_volts, stop_volts, t_start, t_stop, t_ramp, dat_chan)
        End Sub
        
        Public Sub AddSmoothBox(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal t_start As Double, ByVal t_dur As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddSmoothBox
            MyBase.Channel.AddSmoothBox(start_volts, stop_volts, t_start, t_dur, t_stop, dat_chan)
        End Sub
        
        Public Sub AddS(ByVal background_volts As Double, ByVal final_volts As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddS
            MyBase.Channel.AddS(background_volts, final_volts, t_start, t_stop, dat_chan)
        End Sub
        
        Public Function AddRampRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double Implements SpectronServiceReference.ISpectron.AddRampRedDipole
            Return MyBase.Channel.AddRampRedDipole(red_start_volts, red_start_freq, lattice_start_depth, lattice_stop_depth, t_start, t_stop, dat_chan)
        End Function
        
        Public Function AddRampRedDipoleBkwd(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double Implements SpectronServiceReference.ISpectron.AddRampRedDipoleBkwd
            Return MyBase.Channel.AddRampRedDipoleBkwd(red_start_volts, red_start_freq, lattice_start_depth, lattice_stop_depth, t_start, t_stop, dat_chan)
        End Function
        
        Public Function AddSRedDipole(ByVal red_start_volts As Double, ByVal red_start_freq As Double, ByVal lattice_start_depth As Double, ByVal lattice_stop_depth As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) As Double Implements SpectronServiceReference.ISpectron.AddSRedDipole
            Return MyBase.Channel.AddSRedDipole(red_start_volts, red_start_freq, lattice_start_depth, lattice_stop_depth, t_start, t_stop, dat_chan)
        End Function
        
        Public Sub AddFancySmoothRamp(ByVal start_volts As Double, ByVal stop_volts As Double, ByVal alpha As Double, ByVal beta As Double, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddFancySmoothRamp
            MyBase.Channel.AddFancySmoothRamp(start_volts, stop_volts, alpha, beta, t_start, t_stop, dat_chan)
        End Sub
        
        Public Sub AddFromFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal max_current As Double, ByVal num_psu As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddFromFile
            MyBase.Channel.AddFromFile(filename, t_start, t_stop, max_current, num_psu, dat_chan)
        End Sub
        
        Public Sub AddFromTransportFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal max_current As Double, ByVal num_psu As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddFromTransportFile
            MyBase.Channel.AddFromTransportFile(filename, t_start, t_stop, max_current, num_psu, dat_chan)
        End Sub
        
        Public Sub AddFromBinaryTransportFile(ByVal filename As String, ByVal t_start As Double, ByVal t_stop As Double, ByVal dat_chan As Integer) Implements SpectronServiceReference.ISpectron.AddFromBinaryTransportFile
            MyBase.Channel.AddFromBinaryTransportFile(filename, t_start, t_stop, dat_chan)
        End Sub
        
        Public Function Add(ByVal n1 As Double, ByVal n2 As Double) As Double Implements SpectronServiceReference.ISpectron.Add
            Return MyBase.Channel.Add(n1, n2)
        End Function
        
        Public Function GetTotalTime() As Double Implements SpectronServiceReference.ISpectron.GetTotalTime
            Return MyBase.Channel.GetTotalTime
        End Function
    End Class
End Namespace
